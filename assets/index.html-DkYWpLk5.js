import{_ as n,c as a,a as e,o as i}from"./app-DMcXO7hu.js";const l={};function p(c,s){return i(),a("div",null,[...s[0]||(s[0]=[e(`<div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>haproxy是一个四层（TCP）/七层（HTTP）代理和负载均衡器，用来转发流量到后端节点。</li><li>keepalived用于实现虚拟 IP（VIP）的高可用管理，通常依赖 VRRP 协议来实现主备切换。</li></ul></div><h2 id="keepalived-配置文件" tabindex="-1"><a class="header-anchor" href="#keepalived-配置文件"><span>keepalived 配置文件</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>keepalived由两部分组成，服务配置文件和健康检查脚本，该脚本将被定期调用以验证持有虚拟 IP 的节点是否仍然可运行</p></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>vim /etc/keepalived/keepalived.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-cfg line-numbers-mode" data-highlighter="shiki" data-ext="cfg" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-cfg"><span class="line"><span>! Configuration File for keepalived</span></span>
<span class="line"><span>global_defs {</span></span>
<span class="line"><span>    router_id LVS_DEVEL</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>vrrp_script check_apiserver {</span></span>
<span class="line"><span>  script &quot;/etc/keepalived/check_apiserver.sh&quot;</span></span>
<span class="line"><span>  interval 3</span></span>
<span class="line"><span>  weight -2</span></span>
<span class="line"><span>  fall 10</span></span>
<span class="line"><span>  rise 2</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vrrp_instance VI_1 {</span></span>
<span class="line"><span>    state \${STATE}</span></span>
<span class="line"><span>    interface \${INTERFACE}</span></span>
<span class="line"><span>    virtual_router_id \${ROUTER_ID}</span></span>
<span class="line"><span>    priority \${PRIORITY}</span></span>
<span class="line"><span>    authentication {</span></span>
<span class="line"><span>        auth_type PASS</span></span>
<span class="line"><span>        auth_pass \${AUTH_PASS}</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    virtual_ipaddress {</span></span>
<span class="line"><span>        \${APISERVER_VIP}</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    track_script {</span></span>
<span class="line"><span>        check_apiserver</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有一些bash变量样式的占位符需要填写：</p><ul><li><code>\${STATE}</code>一个<code>MASTER</code>和其他所有主机<code>BACKUP</code>，因此虚拟 IP 最初将分配给<code>MASTER</code>；</li><li><code>\${INTERFACE}</code>是参与虚拟 IP 协商的网络接口，例如<code>eth0</code>；</li><li><code>\${ROUTER_ID}</code>在同一子网中的所有集群之间应是唯一的，同时在同一个<code>Keepalived</code>集群的所有主机之间应保持一致。许多发行版将其值预先配置为<code>51</code>；</li><li><code>\${PRIORITY}</code>控制平面节点上的值应高于备份节点上的值，因此<code>101</code>和<code>100</code>分别就足够了；</li><li><code>\${AUTH_PASS}\`\`keepalived</code>对于所有集群主机都应该相同，例如<code>42</code>；</li><li><code>\${APISERVER_VIP}</code>是集群主机之间协商的虚拟 IP 地址<code>keepalived</code>。</li></ul><h2 id="健康检查脚本" tabindex="-1"><a class="header-anchor" href="#健康检查脚本"><span>健康检查脚本</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>#!/bin/sh</span></span>
<span class="line"><span></span></span>
<span class="line"><span>errorExit() {</span></span>
<span class="line"><span>    echo &quot;*** $*&quot; 1&gt;&amp;2</span></span>
<span class="line"><span>    exit 1</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>curl -sfk --max-time 2 https://localhost:\${APISERVER_DEST_PORT}/healthz -o /dev/null || errorExit &quot;Error GET https://localhost:\${APISERVER_DEST_PORT}/healthz&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>\${APISERVER_DEST_PORT}</code>使用 Kubernetes 与 API 服务器通信的端口填写占位符，这是 haproxy 或您的负载均衡器将监听的端口。</li></ul><h2 id="haproxy-配置文件" tabindex="-1"><a class="header-anchor" href="#haproxy-配置文件"><span>haproxy 配置文件</span></a></h2><div class="language-cfg line-numbers-mode" data-highlighter="shiki" data-ext="cfg" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-cfg"><span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># Example configuration for a possible web application.  See the</span></span>
<span class="line"><span># full configuration options online.</span></span>
<span class="line"><span>#</span></span>
<span class="line"><span>#   https://www.haproxy.org/download/1.8/doc/configuration.txt</span></span>
<span class="line"><span>#</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># Global settings</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span>global</span></span>
<span class="line"><span>    # to have these messages end up in /var/log/haproxy.log you will</span></span>
<span class="line"><span>    # need to:</span></span>
<span class="line"><span>    #</span></span>
<span class="line"><span>    # 1) configure syslog to accept network log events.  This is done</span></span>
<span class="line"><span>    #    by adding the &#39;-r&#39; option to the SYSLOGD_OPTIONS in</span></span>
<span class="line"><span>    #    /etc/sysconfig/syslog</span></span>
<span class="line"><span>    #</span></span>
<span class="line"><span>    # 2) configure local2 events to go to the /var/log/haproxy.log</span></span>
<span class="line"><span>    #   file. A line like the following can be added to</span></span>
<span class="line"><span>    #   /etc/sysconfig/syslog</span></span>
<span class="line"><span>    #</span></span>
<span class="line"><span>    #    local2.*                       /var/log/haproxy.log</span></span>
<span class="line"><span>    #</span></span>
<span class="line"><span>    log         127.0.0.1 local2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    chroot      /var/lib/haproxy</span></span>
<span class="line"><span>    pidfile     /var/run/haproxy.pid</span></span>
<span class="line"><span>    maxconn     4000</span></span>
<span class="line"><span>    user        haproxy</span></span>
<span class="line"><span>    group       haproxy</span></span>
<span class="line"><span>    daemon</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # turn on stats unix socket</span></span>
<span class="line"><span>    stats socket /var/lib/haproxy/stats</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # utilize system-wide crypto-policies</span></span>
<span class="line"><span>    ssl-default-bind-ciphers PROFILE=SYSTEM</span></span>
<span class="line"><span>    ssl-default-server-ciphers PROFILE=SYSTEM</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># common defaults that all the &#39;listen&#39; and &#39;backend&#39; sections will</span></span>
<span class="line"><span># use if not designated in their block</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span>defaults</span></span>
<span class="line"><span>    mode                    http</span></span>
<span class="line"><span>    log                     global</span></span>
<span class="line"><span>    option                  httplog</span></span>
<span class="line"><span>    option                  dontlognull</span></span>
<span class="line"><span>    option http-server-close</span></span>
<span class="line"><span>    option forwardfor       except 127.0.0.0/8</span></span>
<span class="line"><span>    option                  redispatch</span></span>
<span class="line"><span>    retries                 3</span></span>
<span class="line"><span>    timeout http-request    10s</span></span>
<span class="line"><span>    timeout queue           1m</span></span>
<span class="line"><span>    timeout connect         10s</span></span>
<span class="line"><span>    timeout client          1m</span></span>
<span class="line"><span>    timeout server          1m</span></span>
<span class="line"><span>    timeout http-keep-alive 10s</span></span>
<span class="line"><span>    timeout check           10s</span></span>
<span class="line"><span>    maxconn                 3000</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># main frontend which proxys to the backends</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span>frontend main</span></span>
<span class="line"><span>    bind *:16443</span></span>
<span class="line"><span>    mode tcp</span></span>
<span class="line"><span>    acl url_static       path_beg       -i /static /images /javascript /stylesheets</span></span>
<span class="line"><span>    acl url_static       path_end       -i .jpg .gif .png .css .js</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    use_backend static          if url_static</span></span>
<span class="line"><span>    default_backend             app</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># static backend for serving up images, stylesheets and such</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span>backend static</span></span>
<span class="line"><span>    balance     roundrobin</span></span>
<span class="line"><span>    server      static 127.0.0.1:6443 check</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># round robin balancing between the various backends</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span>backend app</span></span>
<span class="line"><span>    mode tcp</span></span>
<span class="line"><span>    balance     roundrobin</span></span>
<span class="line"><span>    server  k8s-master01 x.x.x.x:6443 check</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)])])}const t=n(l,[["render",p]]),r=JSON.parse('{"path":"/%E5%AE%B9%E5%99%A8/0eiqd3cd/","title":"k8s高可用配置","lang":"zh-CN","frontmatter":{"title":"k8s高可用配置","createTime":"2025/09/11 13:11:28","permalink":"/容器/0eiqd3cd/","description":"提示 haproxy是一个四层（TCP）/七层（HTTP）代理和负载均衡器，用来转发流量到后端节点。 keepalived用于实现虚拟 IP（VIP）的高可用管理，通常依赖 VRRP 协议来实现主备切换。 keepalived 配置文件 提示 keepalived由两部分组成，服务配置文件和健康检查脚本，该脚本将被定期调用以验证持有虚拟 IP 的节点是...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"k8s高可用配置\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-09T00:25:13.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"http://git.x-echo.net/%E5%AE%B9%E5%99%A8/0eiqd3cd/"}],["meta",{"property":"og:site_name","content":"谈呀"}],["meta",{"property":"og:title","content":"k8s高可用配置"}],["meta",{"property":"og:description","content":"提示 haproxy是一个四层（TCP）/七层（HTTP）代理和负载均衡器，用来转发流量到后端节点。 keepalived用于实现虚拟 IP（VIP）的高可用管理，通常依赖 VRRP 协议来实现主备切换。 keepalived 配置文件 提示 keepalived由两部分组成，服务配置文件和健康检查脚本，该脚本将被定期调用以验证持有虚拟 IP 的节点是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-09T00:25:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-09T00:25:13.000Z"}]]},"readingTime":{"minutes":2.24,"words":673},"git":{"createdTime":1741846472000,"updatedTime":1746750313000,"contributors":[{"name":"wyutan","username":"wyutan","email":"90786339+wyutan@users.noreply.github.com","commits":12,"avatar":"https://avatars.githubusercontent.com/wyutan?v=4","url":"https://github.com/wyutan"}],"changelog":[{"hash":"88496bfeef39e93c088089234b6497d64c35408c","time":1746750313000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"Update 1.k8s高可用配置.md"},{"hash":"7adb1852fda7a12d1983ac9870f3ef06d8bf36d7","time":1746750208000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"Update 1.k8s高可用配置.md"},{"hash":"eaa9a5708ab847d29654aac1a4ac1e8feeab2314","time":1746750190000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"Update 1.k8s高可用配置.md"},{"hash":"4f5631966fbaad73f5fb06842e520e90309b18b9","time":1746611760000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"Update 1.k8s高可用配置.md"},{"hash":"68b2f04fc992a4742f2bf029016689dcae7a4258","time":1746606619000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"Update 1.k8s高可用配置.md"},{"hash":"e70f5b5c6f525510ac53d7e71daabf4694720e21","time":1742191173000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"Update 1.k8s高可用配置.md"},{"hash":"b1f825d8b527df32dc888365429817d3cc1f0582","time":1742185216000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"Update 1.k8s高可用配置.md"},{"hash":"049243529999f1555ac94b6979ba37bce10f6efb","time":1741957898000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"更新 1.k8s高可用配置.md"},{"hash":"70a49bf62dce24c2aae38a855b7739b41a5fbc4f","time":1741957721000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"更新 1.k8s高可用配置.md"},{"hash":"e7cb936da37ef1033b24ac3c67bb1e9c50f551bd","time":1741847033000,"email":"90786339+wyutan@users.noreply.github.com","author":"wyutan","message":"Update 1.k8s高可用配置.md"}]},"autoDesc":true,"filePathRelative":"容器/k8s/note/1.k8s高可用配置.md","headers":[],"categoryList":[{"id":"22c799","sort":10000,"name":"容器"},{"id":"eb26bc","sort":10001,"name":"k8s"},{"id":"74a94d","sort":10003,"name":"note"}]}');export{t as comp,r as data};
